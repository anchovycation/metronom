import{_ as e,c as t,o,a as r}from"./app.714335c7.js";const g=JSON.parse('{"title":"Interface: MetronomOptions","description":"","frontmatter":{},"headers":[{"level":2,"title":"Table of contents","slug":"table-of-contents","link":"#table-of-contents","children":[{"level":3,"title":"Properties","slug":"properties","link":"#properties","children":[]}]},{"level":2,"title":"Properties","slug":"properties-1","link":"#properties-1","children":[{"level":3,"title":"redisClientOptions","slug":"redisclientoptions","link":"#redisclientoptions","children":[]},{"level":3,"title":"log","slug":"log","link":"#log","children":[]}]}],"relativePath":"docs/interfaces/Interfaces.MetronomOptions.md","lastUpdated":1677094105000}'),n={name:"docs/interfaces/Interfaces.MetronomOptions.md"},a=r('<p><a href="./../README.html">metronom</a> / <a href="./../modules.html">Modules</a> / <a href="./../modules/Interfaces.html">Interfaces</a> / MetronomOptions</p><h1 id="interface-metronomoptions" tabindex="-1">Interface: MetronomOptions <a class="header-anchor" href="#interface-metronomoptions" aria-hidden="true">#</a></h1><p><a href="./../modules/Interfaces.html">Interfaces</a>.MetronomOptions</p><p>Metronom constructor argument</p><p><strong><code>Interface</code></strong></p><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a></h2><h3 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-hidden="true">#</a></h3><ul><li><a href="./Interfaces.MetronomOptions.html#redisclientoptions">redisClientOptions</a></li><li><a href="./Interfaces.MetronomOptions.html#log">log</a></li></ul><h2 id="properties-1" tabindex="-1">Properties <a class="header-anchor" href="#properties-1" aria-hidden="true">#</a></h2><h3 id="redisclientoptions" tabindex="-1">redisClientOptions <a class="header-anchor" href="#redisclientoptions" aria-hidden="true">#</a></h3><p>• <code>Optional</code> <strong>redisClientOptions</strong>: <code>RedisClientOptions</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>never</code>&gt;, <code>Record</code>&lt;<code>string</code>, <code>never</code>&gt;&gt;</p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-hidden="true">#</a></h4><p><a href="https://github.com/saracalihan/metronom/blob/b7ca806/lib/Interfaces.ts#L33" target="_blank" rel="noreferrer">Interfaces.ts:33</a></p><hr><h3 id="log" tabindex="-1">log <a class="header-anchor" href="#log" aria-hidden="true">#</a></h3><p>• <code>Optional</code> <strong>log</strong>: <code>boolean</code> | <a href="./../enums/Enums.LogLevels.html"><code>LogLevels</code></a></p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a></h4><p><a href="https://github.com/saracalihan/metronom/blob/b7ca806/lib/Interfaces.ts#L34" target="_blank" rel="noreferrer">Interfaces.ts:34</a></p>',18),i=[a];function s(d,c,l,h,p,f){return o(),t("div",null,i)}const u=e(n,[["render",s]]);export{g as __pageData,u as default};
